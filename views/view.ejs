
<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8" />
    <title>接口测试</title>
    <script src="https://unpkg.com/react@16/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@16/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6.15.0/babel.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.20.1/moment.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/antd/3.0.2/antd.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/antd/3.0.2/antd.js"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <link rel="stylesheet" href="/stylesheets/style.css" />
</head>

<body>
    <div id="app"></div>
    <script type="text/babel">
        class TimeNow extends React.Component {
            constructor() {
                super();
                this.state = {
                    time: ''
                }
            }
            componentDidMount() {
                setInterval(() => {
                    var time = new Date().toLocaleString();
                    this.setState({
                        time
                    });
                }, 1000);
            }
            render = () => {
                const { time } = this.state;
                return <div style={{ marginTop: 20 }}>时间：{time}</div>
            }
        }
        class MessageBox extends React.Component {
            render = () => {
                return (
                    <div>
                        <h1>Hello World!</h1>
                        <img src="https://v1.jinrishici.com/rensheng.svg" />
                        <TimeNow />
                    </div>)
            }
        }
        class ReqBox extends React.Component {
            state = {
                val: "",
                Host: `${document.location.protocol}//${window.location.host}/api/`,
                reqdate: "",
                reqtype: "",
                responData: ""
            }
            getValue(e) {
                this.setState({
                    val: e.target.value
                })
            }
            ReqFun() {
                const { val, Host, reqdate, reqtype } = this.state;
                this.setState({
                    reqtype
                })
                let Data;
                if (val === "") {
                    alert("请输入请求地址")
                    return
                }
                if (reqtype === "get") {
                    axios.get(Host + val)
                        .then(result => {
                            this.setState({
                                responData: JSON.stringify(result.data)
                            })
                        })
                } else {
                    let reqDate;
                    try {
                        reqDate = JSON.parse(reqdate)
                    } catch (err) {
                        reqDate = {}
                    }
                    // axios 请求拦截器处理请求数据
                    // axios.interceptors.request.use(config => {
                    //     config.headers.common['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';
                    //     return config;
                    // })
                        axios({
                            url:Host + val,
                            method:"post",
                            data:reqDate,
                            headers:{
                                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                            }
                        })
                        .then(result => {
                            this.setState({
                                responData: JSON.stringify(result.data)
                            })
                        }).catch(err => {
                            console.log(111, err)
                        })
                }
            }
            getReqDate(e) {
                this.setState({
                    reqdate: e.target.value
                })
            }
            getReqtype(e) {
                this.setState({
                    reqtype: e.target.value
                })
            }
            render = () => {
                const { Host, responData, reqtype } = this.state;
                return (
                    <div className="ReqBox">
                        <h3>请求</h3>
                        <div className="selectBox">
                            <input type="radio" name="type" id="get" value="get" onChange={(e) => this.getReqtype(e)} />
                            <label className="selectItem" htmlFor="get">GET</label>
                            <input type="radio" name="type" style={{ marginLeft: "30px" }} id="post" value="post" onChange={(e) => this.getReqtype(e)} />
                            <label className="selectItem" htmlFor="post">POST</label>
                        </div>
                        <div className="reqdate">
                            <span className="ReqBoxLabel">请求参数：</span>
                            <textarea
                                className="ReqArea"
                                rows="3"
                                cols="20"
                                placeholder="请输入正确json结构"
                                onBlur={(e) => this.getReqDate(e)} />
                        </div>
                        <span className="ReqBoxLabel">请求地址：</span>
                        <antd.Input addonBefore={Host} style={{ width: "400px" }} onChange={e => this.getValue(e)} />
                        <antd.Button
                            style={{ marginLeft: "3px" }}
                            type="primary"
                            onClick={() => this.ReqFun()}
                        >
                            点击请求
                        </antd.Button>
                        <div className="responBox">
                            <h3>请求结果</h3>
                            <div>
                                {responData}
                            </div>
                        </div>
                    </div>
                )
            }
        }
        class TestBox extends React.Component {
            render = () => {
                return (
                    <div>
                        <MessageBox />
                        <ReqBox />
                    </div>
                )
            }
        }
        ReactDOM.render(<TestBox />,
            document.getElementById('app'),
        )
    </script>
</body>

</html>